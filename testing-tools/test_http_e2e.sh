#!/bin/bash

# Get library to use functions
source library
requirement=(sshpass)

isSet_hostname # Solve the hostname warning
isExist_package # Check pacages and install them

# Variables for default setting
num_pattern='^[0-9]+$'
num_request=10
target_server=127.0.0.1:80
isCorrect=-1
pool=1
test_script=test_http.sh

# Print the number of HTTP request messages generated by this script

if [[ $1 == "-h"  ]]; then
  echo "[Help] Please enter the command: ./test_http_e2e.sh {source_server } {ssh_id} {ssh_pw} {number of requests} {target_server}"
  echo "[Help] example: ./test_http_e2e.sh 10.20.20.20 ubuntu_id ubuntu_pw 100 10.10.10.10:8080"
else
  if [[ ! -z $4 ]]; then
    if [[ $4 =~ $num_pattern ]]; then
      num_request=$4
      echo "[Log] The number of http request messages: $num_request"

			if [[ $num_request -lt 10 ]]; then
				pool=1
			else
				pool=$((num_request/10))
			fi

      isCorrect=1
    else
      echo "[Error] Please enter a correct number"
    fi
  else
    echo "[Log] The number of http request messages: $num_request (default value)"
    isCorrect=1
  fi

# Print the target server of HTTP request messages
  if [[ ! -z $5 ]]; then
    target_server=$5
    echo "[Log] Send HTTP request messages to $target_server"
  else
    echo "[Log] Send HTTP request messages to $target_server (default value)"
  fi

# Generate and send HTTP request messages to the target server
  if [[ $isCorrect -lt 0 ]]; then
    echo "[Error] please check your input values again"
  else
    echo "[Log] ready to send http request messages"
    sshpass -p $3 scp -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null $test_script library $2@$1:~/
		sshpass -p $3 ssh -T -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null $2@$1 ./$test_script $4 $5
  fi
fi
